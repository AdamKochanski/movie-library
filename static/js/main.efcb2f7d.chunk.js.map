{"version":3,"sources":["config.js","actions.js","actionTypes.js","components/SelectGenre.jsx","components/Search.jsx","components/Result.jsx","components/Results.jsx","components/Popup.jsx","selectors/rootSelectors.js","selectors/moviesList.js","App.jsx","serviceWorker.js","reducers/moviesList.js","reducers/index.js","index.jsx","assets/img/no-poster.jpg"],"names":["apiKey","apiUrl","imgUrl","searchUrl","genres","id","name","resultsUpdate","payload","type","selectDetails","searchUpdate","s","page","dispatch","axios","then","data","genreUpdate","genreId","SelectGenre","handleSelect","FormControl","Select","onChange","defaultValue","map","genre","MenuItem","key","value","FormHelperText","Search","handleInput","totalResults","className","TextField","label","placeholder","onKeyPress","Result","result","openPopup","role","tabIndex","onKeyDown","onClick","poster_path","src","alt","title","noPosterImg","Results","results","Popup","selected","closePopup","release_date","popularity","overview","Button","variant","color","size","getMovieList","state","moviesList","selectedDetails","store","selectedDetailsTitle","searchResults","totalPages","App","useState","searchMethod","setState","useDispatch","useSelector","movieListSelector","e","target","length","prevState","setGenre","Pagination","count","handleChange","undefined","Boolean","window","location","hostname","match","defaultState","action","total_results","total_pages","combineReducers","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.efcb2f7d.chunk.js","sourcesContent":["export const apiKey = 'a816a5e1b96a295b1b1cfbcf3c9c90ca';\nexport const apiUrl = 'https://api.themoviedb.org/3/';\nexport const imgUrl = 'https://image.tmdb.org/t/p/w300/';\nexport const lang = 'en-US';\nexport const includeAdult = false;\n\nexport const searchUrl = `${apiUrl}search/movie?api_key=${apiKey}&language=${lang}&include_adult=${includeAdult}&query=`;\n\nexport const genres = [\n  { id: 0, name: 'OFF' },\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n","import axios from 'axios';\nimport * as ACTIONS from './actionTypes';\nimport { apiUrl, apiKey, searchUrl } from './config';\n\nexport const resultsUpdate = (payload) => ({\n  type: ACTIONS.UPDATE_RESULTS,\n  payload,\n});\n\nexport const resultsReset = (payload) => ({\n  type: ACTIONS.RESULTS_RESET,\n  payload,\n});\n\nexport const selectDetails = (payload) => ({\n  type: ACTIONS.UPDATE_SELECTED_DETAILS,\n  payload,\n});\n\nexport const selectID = (payload) => (dispatch) => {\n  axios(`${apiUrl}movie/${payload}?api_key=${apiKey}`).then(({ data }) => {\n    dispatch(selectDetails(data));\n  });\n};\n\nexport const searchUpdate = (s, page) => (dispatch) => {\n  axios(`${searchUrl + s}&page=${page}`).then(({ data }) => {\n    dispatch(resultsUpdate(data));\n  });\n};\n\nexport const genreUpdate = (genreId, page) => (dispatch) => {\n  if (genreId !== 0) {\n    axios(`${apiUrl}discover/movie?api_key=${apiKey}&page=${page}&with_genres=${genreId}`)\n      .then(({ data }) => {\n        dispatch(resultsUpdate(data));\n      });\n  } else {\n    dispatch(resultsReset([]));\n  }\n};\n","export const UPDATE_RESULTS = 'results_update';\nexport const RESULTS_RESET = 'results_reset';\nexport const UPDATE_SELECTED_DETAILS = 'selected_details_update';\n","import React from 'react';\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  FormHelperText,\n} from '@material-ui/core';\nimport { genres } from '../config';\n\nfunction SelectGenre({ handleSelect }) {\n  return (\n    <FormControl>\n      <Select\n        onChange={handleSelect}\n        defaultValue={0}\n      >\n        {genres.map((genre) => (\n          <MenuItem key={genre.id} value={genre.id}>{genre.name}</MenuItem>\n        ))}\n      </Select>\n      <FormHelperText>Search by genre</FormHelperText>\n    </FormControl>\n  );\n}\n\nexport default SelectGenre;\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nimport SelectGenre from './SelectGenre';\n\nfunction Search({\n  handleInput,\n  handleSelect,\n  totalResults,\n}) {\n  return (\n    <section className=\"searchBox-wrap\">\n      <SelectGenre handleSelect={handleSelect} />\n      <TextField\n        label=\"Search by phrase\"\n        placeholder=\"Confirm with Enter\"\n        className=\"searchBox\"\n        onKeyPress={handleInput}\n      />\n      <p className=\"amount\">\n        <span>Total results: </span>\n        {totalResults}\n      </p>\n    </section>\n  );\n}\n\nexport default Search;\n","import React from 'react';\nimport { imgUrl } from '../config';\nimport noPosterImg from '../assets/img/no-poster.jpg';\n\nfunction Result({ result, openPopup }) {\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className=\"result\"\n      onKeyDown={() => openPopup(result.id)}\n      onClick={() => openPopup(result.id)}\n    >\n      {result.poster_path !== null\n        ? <img src={imgUrl + result.poster_path} alt={result.title} />\n        : <img src={noPosterImg} alt=\"Poster is not available\" />}\n      <h3>{result.title}</h3>\n    </div>\n  );\n}\n\nexport default Result;\n","import React from 'react';\nimport Result from './Result';\n\nfunction Results({ results, openPopup }) {\n  return (\n    <section className=\"results\">\n      {results.map((result) => (\n        <Result key={result.id} result={result} openPopup={openPopup} />\n      ))}\n    </section>\n  );\n}\n\nexport default Results","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { imgUrl } from '../config';\nimport noPosterImg from '../assets/img/no-poster.jpg';\n\nfunction Popup({ selected, closePopup }) {\n  return (\n    <section className=\"popup\">\n      <div className=\"content\">\n        <h2>\n          <p>{selected.title}</p>\n          <span>\n            {selected.release_date}\n          </span>\n        </h2>\n        <p className=\"rating\">\n          <span>Popularity: </span>\n          {selected.popularity}\n        </p>\n        <div className=\"plot\">\n          {selected.poster_path !== null\n            ? <img src={imgUrl + selected.poster_path} alt={selected.title} />\n            : <img src={noPosterImg} alt=\"Poster is not available\" />}\n          <p>{selected.overview}</p>\n        </div>\n        <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={closePopup}>BACK</Button>\n      </div>\n    </section>\n  );\n}\n\nexport default Popup;\n","// eslint-disable-next-line import/prefer-default-export\nexport const getMovieList = (state) => state.moviesList;\n","import { getMovieList } from './rootSelectors';\n\nexport const selectedDetails = (store) => getMovieList(store).selected;\nexport const selectedDetailsTitle = (store) => getMovieList(store).selected.title;\nexport const searchResults = (store) => getMovieList(store).results;\nexport const totalResults = (store) => getMovieList(store).totalResults;\nexport const totalPages = (store) => getMovieList(store).totalPages;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Pagination } from '@material-ui/lab';\nimport {\n  searchUpdate,\n  genreUpdate,\n  selectID,\n  selectDetails,\n} from './actions';\nimport Search from './components/Search';\nimport Results from './components/Results';\nimport Popup from './components/Popup';\nimport * as movieListSelector from './selectors/moviesList';\n\nfunction App() {\n  const [state, setState] = useState({\n    s: '',\n    genreId: 0,\n    page: 1,\n    searchMethod: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const selectedDetails = useSelector(movieListSelector.selectedDetails);\n  const selectedDetailsTitle = useSelector(movieListSelector.selectedDetailsTitle);\n  const searchResults = useSelector(movieListSelector.searchResults);\n  const totalResults = useSelector(movieListSelector.totalResults);\n  const totalPages = useSelector(movieListSelector.totalPages);\n\n  const handleChange = (page) => {\n    if (state.searchMethod === 'select') {\n      dispatch(genreUpdate(state.genreId, page));\n    } else if (state.searchMethod === 'input') {\n      dispatch(searchUpdate(state.s, page));\n    }\n    setState((prevState) => ({ ...prevState, page }));\n  };\n\n  const handleSelect = (e) => {\n    const genre = e.target.value;\n    dispatch(genreUpdate(genre, state.page));\n    setState((prevState) => ({ ...prevState, genreId: genre, searchMethod: 'select' }));\n  };\n\n  const handleInput = (e) => {\n    const s = e.target.value;\n    if (e.key === 'Enter' && s.length > 2) {\n      dispatch(searchUpdate(s, state.page));\n    }\n    setState((prevState) => ({ ...prevState, s, searchMethod: 'input' }));\n  };\n\n  const openPopup = (id) => {\n    dispatch(selectID(id));\n  };\n\n  const closePopup = () => {\n    dispatch(selectDetails({}));\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>- Movie Library -</h1>\n      </header>\n      <main>\n        <Search\n          handleInput={handleInput}\n          handleSelect={handleSelect}\n          totalResults={totalResults}\n          setGenre={state.genreId}\n        />\n        {(totalPages > 1)\n          && (\n            <Pagination\n              count={totalPages}\n              page={state.page}\n              onChange={(e, page) => handleChange(page)}\n              color=\"secondary\"\n            />\n          )}\n        <Results results={searchResults} openPopup={openPopup} />\n        {(selectedDetailsTitle !== undefined)\n          && <Popup selected={selectedDetails} closePopup={closePopup} />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ACTIONS from '../actionTypes';\n\nconst defaultState = {\n  results: [],\n  selected: 0,\n  totalResults: 0,\n  totalPages: 0,\n};\n\nfunction moviesList(state = defaultState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case ACTIONS.UPDATE_RESULTS: {\n      // eslint-disable-next-line camelcase\n      const { results, total_results, total_pages } = action.payload;\n\n      return {\n        ...state,\n        results,\n        totalResults: total_results,\n        totalPages: total_pages,\n      };\n    }\n    case ACTIONS.RESULTS_RESET:\n      return {\n        ...state,\n        results: [],\n        totalResults: 0,\n        totalPages: 0,\n      };\n\n    case ACTIONS.UPDATE_SELECTED_DETAILS:\n      return {\n        ...state,\n        selected: payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default moviesList;\n","import { combineReducers } from 'redux';\nimport moviesList from './moviesList';\n\nexport default combineReducers({\n  moviesList,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\nimport 'typeface-lato';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no-poster.f211ed62.jpg\";"],"sourceRoot":""}